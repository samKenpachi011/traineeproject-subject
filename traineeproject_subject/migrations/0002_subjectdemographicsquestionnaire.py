# Generated by Django 3.1.4 on 2022-01-17 16:26

import _socket
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import django_revision.revision_field
import edc_base.model_fields.custom_fields
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.model_validators.date
import edc_base.utils
import edc_protocol.validators


class Migration(migrations.Migration):

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('traineeproject_subject', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubjectDemographicsQuestionnaire',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('ethnicity', models.CharField(choices=[('Black African', 'Black African'), ('Caucasian', 'Caucasian'), ('Asian', 'Asian'), ('OTHER', 'Other, specify')], max_length=25, verbose_name='Ethnicity ')),
                ('ethnicity_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If other specify...')),
                ('household_members', models.PositiveSmallIntegerField(verbose_name='How many household members live in the participants primary home')),
                ('highest_education', models.CharField(choices=[('None', 'None'), ('Primary', 'Primary'), ('Junior Secondary', 'Junior Secondary'), ('Senior Secondary', 'Senior Secondary'), ('Tertiary', 'Tertiary')], max_length=30, verbose_name='Highest education level')),
                ('employment_status', models.CharField(choices=[('occasional_or_casual_employment', 'Occasional or casual employment'), ('seasonal_employment', 'Seasonal Employment'), ('formal_wage_employment_full_time', 'Formal wage employment (full-time)'), ('formal_wage_employment_part_time', 'Formal wage employment (part-time)'), ('self_employed_in_agriculture', 'Self employed in agriculture'), ('self_employed_making_money_full_time', 'Self-employed making money (full time)'), ('self_employed_making_money_part_time', 'Self-employed making money (part time)'), ('dont_want_to_answer', "Don't want to answer"), ('OTHER', 'Other')], max_length=40, verbose_name='Employment Status')),
                ('employment_status_other', models.CharField(blank=True, max_length=33, null=True, verbose_name='Other, specify')),
                ('settlement_type', models.CharField(choices=[('urban', 'Urban'), ('rural', 'Rural')], max_length=30, verbose_name='Settlement Type?')),
                ('marital_status', models.CharField(choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed')], max_length=30, verbose_name='Current marital status?')),
                ('marital_status_other', models.CharField(blank=True, max_length=30, null=True, verbose_name='Other, specify')),
                ('running_water', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=30, verbose_name='Is there running water in domicile?')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.site')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='traineeproject_subject.subjectvisit')),
            ],
            options={
                'verbose_name': 'Demographic Data',
                'verbose_name_plural': 'Demographic Data',
                'abstract': False,
            },
        ),
    ]
